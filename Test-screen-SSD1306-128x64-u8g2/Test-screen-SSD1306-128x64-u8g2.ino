#include <U8g2lib.h>

// Rotation, clock pin (SCL/SCK), data pin (SDA)
//U8G2_SSD1306_128X64_NONAME_1_SW_I2C oled(U8G2_R0, 3, 2);
U8G2_SSD1306_128X64_NONAME_1_HW_I2C oled(U8G2_R0);
//U8G2_SSD1306_128X64_NONAME_F_HW_I2C oled(U8G2_R0);

char textDisplayed = 4;
const int displayDelay = 3000;
long lastDisplay = 0;

static const unsigned char logoBitmap [] U8X8_PROGMEM  = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 
  0x00, 0x08, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x04, 0x00, 0x20, 0x02, 0x00, 0x10, 0x3f, 0x7e, 0x00, 
  0x00, 0x3c, 0x00, 0x00, 0x1e, 0xff, 0xf0, 0x0c, 0x00, 0x38, 0x06, 0x00, 0x1c, 0x3f, 0x7e, 0x00, 
  0x00, 0xff, 0x00, 0x00, 0x7f, 0xbf, 0xf8, 0x3c, 0x00, 0x3c, 0x1e, 0x00, 0x1e, 0x3f, 0x7e, 0x00, 
  0x03, 0xff, 0xc0, 0x01, 0xff, 0xef, 0xfe, 0xfc, 0x00, 0x3f, 0x7e, 0x00, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0xff, 0x40, 0x01, 0x7f, 0x87, 0xfa, 0xbc, 0x00, 0x3f, 0x7e, 0x00, 0x1f, 0xbd, 0x7a, 0x00, 
  0x00, 0x3d, 0xc0, 0x01, 0xde, 0x01, 0xfe, 0xec, 0x00, 0x3f, 0x7e, 0x00, 0x1f, 0xb7, 0x6e, 0x00, 
  0x00, 0x0f, 0xc0, 0x01, 0xf4, 0x00, 0x5e, 0xfc, 0x00, 0x3f, 0x7e, 0x00, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc0, 0x81, 0xf8, 0x00, 0x7e, 0xfc, 0x00, 0x2f, 0x7e, 0x00, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc0, 0xe1, 0xf8, 0x00, 0x7e, 0xfc, 0x00, 0xff, 0x7e, 0x00, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc0, 0xf1, 0xf8, 0x00, 0x7e, 0xfc, 0x03, 0xfd, 0x7e, 0x00, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc0, 0xfd, 0xf8, 0x00, 0x7e, 0xfc, 0x07, 0xff, 0x7e, 0x00, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0x40, 0xfd, 0xf8, 0x00, 0x7e, 0xfc, 0x1f, 0xfd, 0x5e, 0x0e, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0d, 0xc0, 0xfd, 0xf8, 0x00, 0x7e, 0xfc, 0x7e, 0xff, 0x76, 0x3f, 0x1f, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc0, 0xfd, 0xf8, 0x00, 0x7e, 0xfd, 0xff, 0xaf, 0x7e, 0xff, 0xdf, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc0, 0xbd, 0xfc, 0x00, 0x5e, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xf7, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0xc3, 0xfd, 0xfe, 0x01, 0xfe, 0xff, 0xfe, 0x3f, 0x7f, 0xff, 0xff, 0xb7, 0x6e, 0x00, 
  0x00, 0x0f, 0xcf, 0xf5, 0xff, 0x87, 0xfa, 0xff, 0xfc, 0x3f, 0x7f, 0xff, 0xfe, 0xbd, 0x7a, 0x00, 
  0x00, 0x0f, 0xdf, 0xfd, 0xff, 0xef, 0xfe, 0xff, 0xf0, 0x3f, 0x7f, 0xfb, 0xff, 0xbf, 0x7e, 0x00, 
  0x00, 0x0f, 0x7f, 0xf0, 0x7f, 0xbf, 0xf8, 0x3f, 0xc0, 0x3c, 0x1f, 0xe1, 0xfe, 0x3d, 0x7a, 0x00, 
  0x00, 0x0d, 0xff, 0xe0, 0x1e, 0xff, 0xf0, 0x0f, 0x00, 0x38, 0x07, 0x80, 0x7c, 0x37, 0x6e, 0x00, 
  0x00, 0x0f, 0xff, 0x80, 0x07, 0xff, 0xc0, 0x02, 0x00, 0x20, 0x01, 0x00, 0x10, 0x3f, 0x7e, 0x00, 
  0x00, 0x07, 0xfe, 0x00, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x3e, 0x00, 
  0x00, 0x01, 0xf8, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0e, 0x00, 
  0x00, 0x00, 0x70, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
  oled.begin();
  
}

void loop() {
  if (millis() - lastDisplay >= displayDelay || lastDisplay == 0) {

    if (textDisplayed == 4) {
      oled.clear();
      oled.firstPage();
      do {
        oled.setFont(u8g2_font_t0_12_tr);
        oled.setCursor(0, 10);
        oled.print("Hello LouWii!");
        oled.setCursor(0, 20);
        oled.print("It's me, Pro Micro!");
        oled.setCursor(0, 30);
        oled.print("=]");
      } while (oled.nextPage());

      textDisplayed = 1;
      lastDisplay = millis();
    } else if (textDisplayed == 1) {
      // No scrolling animation in this lib
      oled.clear();
      do {
        oled.setFont(u8g2_font_t0_12_tr);
        oled.setCursor(0, 10);
        oled.print("Scrolling ?");
      } while (oled.nextPage());

      textDisplayed = 2;
      lastDisplay = millis();
    } else if (textDisplayed == 2) {
      oled.clear();
      // Backslash is "protecting" the next character, we need 2 backslaches to display 1
      do {
        oled.setFont(u8g2_font_5x7_mf );
        oled.setCursor(0, 9);
        oled.print("");
        oled.setCursor(0, 18);
        oled.print("");
        oled.setCursor(0, 27);
        oled.print("   \\\\\\||||||////");
        oled.setCursor(0, 36);
        oled.print("    \\\\  ~ ~  //");
        oled.setCursor(0, 45);
        oled.print("     (  @ @  )");
        oled.setCursor(0, 54);
        oled.println("___oOOo-(_)-oOOo___");
      } while (oled.nextPage());

      textDisplayed = 3;
      lastDisplay = millis();
    } else if (textDisplayed == 3) {
      oled.clear();
      oled.firstPage();
      do {
        oled.setDrawColor(1);
        oled.setFont(u8g2_font_ncenB14_tr);
        oled.drawXBM(0, 0, 128, 64, logoBitmap);
      } while (oled.nextPage());

      textDisplayed = 4;
      lastDisplay = millis();
    }
  }

}
